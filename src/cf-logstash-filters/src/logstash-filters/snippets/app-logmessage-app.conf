##------------------------------
## Parses LogMessage APP events.|
##------------------------------

if [@source][type] =~ /APP(|\/.*)$/ {

    mutate {
      add_tag => [ "logmessage-app" ]
    }

    mutate {
      # Firehose sets values like "APP/PROC/WEB". Rename just to "APP" for simplicity.
      replace => { "[@source][type]" => "APP" }
    }

    # Parse application logs based on msg format.
    # Marks unknown format with [unknown_msg_format] tag.

    ## ---- Format 1: JSON
    if [@message] =~ /^\s*{".*}\s*$/ { # if it looks like JSON
        # Remove hexidecimal encoded values, like "\x22", which break
        # JSON parsing
        mutate {
            gsub => [ "@message", "\\x[0-9a-fA-F]{2}", "" ]
        }

        truncate {
            fields => ["@message"]
            add_tag => [ "_messagetrimmed" ]
            length_bytes => 32765
        }
        if !("_messagetrimmed" in [tags]) {
            json {
                source => "@message"
                target => "app"
                id => "cloudfoundry/app-message/json"
            }

            if !("_jsonparsefailure" in [tags]) {

                mutate {
                    rename => { "[app][message]" => "@message" } # @message
                }
                # concat message and exception
                if [app][exception] {
                    mutate {
                        ## NOTE: keep line break and new line spacing (new line is inserted in logstash in such a way)
                        replace => { "@message" => "%{@message}
    %{[app][exception]}" }
                        remove_field => [ "[app][exception]" ]
                    }
                }

                mutate {
                    rename => { "[app][level]" => "@level" } # @level
                }

            } else {

                mutate {
                    add_tag => [ "unknown_msg_format" ]
                    remove_tag => ["_jsonparsefailure"]
                }
            }
        }

    ## ---- Format 2: "[CONTAINER] .." (Tomcat logs)
    } else if [@message] =~ /^\s*\[CONTAINER\]/ {

        # Tomcat specific parsing (in accordance with https://github.com/cloudfoundry/java-buildpack-support/blob/master/tomcat-logging-support/src/main/java/com/gopivotal/cloudfoundry/tomcat/logging/CloudFoundryFormatter.java)
        grok {
            match => [ "@message", "(?<app_logger>\[CONTAINER\]%{SPACE}%{NOTSPACE})%{SPACE}%{LOGLEVEL:@level}%{SPACE}%{GREEDYDATA:@message}" ]
            overwrite => [ "@message", "@level" ]
            tag_on_failure => [ "unknown_msg_format" ]
            id => "cloudfoundry/app-message/tomcat_message/grok"
        }
        mutate {
            rename => { "app_logger" => "[app][logger]" }
        }

    } else {

        mutate {
                add_tag => [ "unknown_msg_format" ]
            }
    }

}
