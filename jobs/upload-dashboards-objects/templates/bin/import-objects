#!/var/vcap/packages/python3-requests/venv/bin/python3

<%

  job_dir = "/var/vcap/jobs/upload-dashboards-objects"
  store_dir = "/var/vcap/store/upload-dashboards-objects"
  dashboards_link = link('opensearch_dashboards')
%>

import glob
import logging
import os
import requests

logging.basicConfig(level=logging.INFO)

if __name__ == "__main__":
    session = requests.Session()
    ndjson_output_path = "/var/vcap/jobs/upload-dashboards-objects/dashboard.ndjson"
    # set CA
    ca =  '<%= job_dir %>/config/ssl/opensearch.ca'
    cert = '<%= job_dir %>/config/ssl/dashboard-web.crt'
    key = '<%= job_dir %>/config/ssl/dashboard-web.key'

    logs_url = 'https://<%= p('opensearch_dashboards.host') %>:<%= dashboards_link.p('opensearch_dashboards.port') %>'
    with open('<%= store_dir %>/org-tenants.txt') as orgs:
      for tenant in orgs:
        headers = {
          'osd-xsrf': 'true',
          'x-proxy-roles': 'admin',
          'x-proxy-user': 'admin',
          'x-forwarded-for': '127.0.0.1',
          'securitytenant': tenant.strip()
        }

        with open(ndjson_output_path, 'rb') as ndjson_file:
          ndjson_files= {'file':(ndjson_output_path, ndjson_file, 'application/x-ndjson')}
          r = session.post(
            '{}/api/saved_objects/_import?overwrite=true'.format(
              logs_url
            ),
            files=ndjson_files,
            headers=headers,
            cert=(cert, key),
            verify=ca
          )
          if r.status_code == 200:
            logging.info(f'NDJSON FILE {ndjson_output_path} uploaded sucessfully')
          elif r.status_code == 409:
            put = session.put(
                  '{}/api/saved_objects/_import?overwrite=true'.format(
              logs_url
              ),
            data=ndjson_file,
            headers=headers,
            cert=(cert, key),
            verify=ca
            )
            if put.status_code == 200:
                logging.info(f'NDJSON FILE {ndjson_output_path} uploaded successfully')
            else:
                logging.error(f"Failed to upload file {ndjson_output_path}, status code: {put.status_code}")
                try:
                   error_response = put.json()
                   logging.error(f"Error detils: {error_response}")
                except ValueError:
                   logging.error(f"raw response: {put.text}")
                logging.info(f'Failed to upload NDJSON FILE {ndjson_output_path}')
          else:
              logging.error(f"Failed to upload file {ndjson_output_path}, status code: {r.status_code}")
              try:
                  error_response = r.json()
                  logging.error(f"Error detils: {error_response}")
              except ValueError:
                  logging.error(f"raw response: {r.text}")
              logging.info(f'Failed to upload NDJSON FILE {ndjson_output_path}')

        index_headers = {
          'content-type': 'application/json',
          'osd-xsrf': 'true',
          'x-proxy-roles': 'admin',
          'x-proxy-user': 'admin',
          'x-forwarded-for': '127.0.0.1',
          'securitytenant': tenant.strip(),
        }
        r = session.post(
          '{}/api/opensearch-dashboards/settings'.format(logs_url),
          data='{"changes":{"defaultIndex":"<%= p('dashboards_objects.default_index') %>", "timeline:es.default_index": "<%= p('dashboards_objects.default_index') %>"}}',
          headers=index_headers,
          cert=(cert, key),
          verify=ca
        )
        if r.status_code == 200:
            logging.info('Successfully Set <%= p('dashboards_objects.default_index') %> as Default Index')
        else:
            logging.info('Failed to Set <%= p('dashboards_objects.default_index') %> as Default Index')

