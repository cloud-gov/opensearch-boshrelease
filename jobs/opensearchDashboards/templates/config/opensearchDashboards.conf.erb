# opensearchDashboards is served by a back end server. This controls which port to use.
server.port: <%= p('opensearchDashboards.port') %>

# The host to bind the server to.
server.host: <%= p('opensearchDashboards.host') %>

# If you are running opensearchDashboards behind a proxy, and want to mount it at a path,
# specify that path here. The basePath can't end in a slash.
# server.basePath: ""

# The opensearch instance to use for all your queries.
# opensearch.url: "http://localhost:9200"
<%
  opensearch_port = nil
  if_link("opensearch") { |opensearch_link| opensearch_port = opensearch_link.p("opensearch.port") }
  unless opensearch_port
    opensearch_port = p("opensearchDashboards.opensearch.port")
  end
%>
opensearch.hosts: "http://<%= p("opensearchDashboards.opensearch.host") + ':' + opensearch_port.to_s %>"

# preserve_opensearch_host true will send the hostname specified in `opensearch`. If you set it to false,
# then the host you use to connect to *this* opensearchDashboards instance will be sent.
# opensearch.preserveHost: true

# opensearchDashboards uses an index in opensearch to store saved searches, visualizations
# and dashboards. It will create a new index if it doesn't already exist.
# opensearchDashboards.index: ".opensearchDashboards"
opensearchDashboards.index: "<%= p('opensearchDashboards.index') %>"

# The default application to load.
# opensearchDashboards.defaultAppId: "discover"
opensearchDashboards.defaultAppId: "<%= p('opensearchDashboards.defaultAppId') %>"

# If your opensearch is protected with basic auth, these are the user credentials
# used by the opensearchDashboards server to perform maintenance on the opensearchDashboards.index at startup. Your opensearchDashboards
# users will still need to authenticate with opensearch (which is proxied through
# the opensearchDashboards server)
opensearch.username: "admin"
opensearch.password: "admin"

# SSL for outgoing requests from the opensearchDashboards Server to the browser (PEM formatted)
# server.ssl.cert: /path/to/your/server.crt
# server.ssl.key: /path/to/your/server.key

# Optional setting to validate that your opensearch backend uses the same key files (PEM formatted)
# opensearch.ssl.cert: "<%= p('opensearchDashboards.opensearch.http.ssl.certificate') %>"
# opensearch.ssl.key: "<%= p('opensearchDashboards.opensearch.http.ssl.private_key') %>"

# If you need to provide a CA certificate for your opensearch instance, put
# the path of the pem file here.
# opensearch.ssl.ca: /path/to/your/CA.pem

# Set to false to have a complete disregard for the validity of the SSL
# certificate.
# opensearch.ssl.verify: true

# Time in milliseconds to wait for opensearch to respond to pings, defaults to
# request_timeout setting
# opensearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or opensearch.
# This must be > 0
# opensearch.requestTimeout: 300000
opensearch.requestTimeout: <%= p('opensearchDashboards.request_timeout') %>

# Time in milliseconds for opensearch to wait for responses from shards.
# Set to 0 to disable.
# opensearch.shardTimeout: 0
opensearch.shardTimeout: <%= p('opensearchDashboards.shard_timeout') %>

# Time in milliseconds to wait for opensearch at opensearchDashboards startup before retrying
# opensearch.startupTimeout: 5000

# Set the path to where you would like the process id file to be created.
# pid.file: /var/run/opensearchDashboards.pid

# If you would like to send the log output to a file you can set the path below.
# logging.dest: stdout

# Set this to true to suppress all logging output.
# logging.silent: false

# Set this to true to suppress all logging output except for error messages.
# logging.quiet: false

# Set this to true to log all events, including system usage information and all requests.
# logging.verbose: false

# Configure development console
console.enabled: <%= p("opensearchDashboards.console_enabled") %>
# xpack.searchprofiler.enabled: <%= p("opensearchDashboards.searchprofiler_enabled") %>
# xpack.grokdebugger.enabled: <%= p("opensearchDashboards.grokdebugger_enabled") %>

# # configure apm
# xpack.apm.ui.enabled: <%= p("opensearchDashboards.apm_enabled") %>

# # set reporting key for load balanced scenarios
# xpack.reporting.encryptionKey: <%= p("opensearchDashboards.reporting_key") %>

# # disable x-pack
# xpack.monitoring.enabled: false
# xpack.graph.enabled: false
# xpack.ml.enabled: false
# xpack.security.enabled: false
# xpack.watcher.enabled: false
# xpack.spaces.enabled: false

<% if_p('opensearchDashboards.config_options') do p("opensearchDashboards.config_options", {}).each do | k, v | %>
<%= k %>: <%= v %><% end %>
<% end %>
