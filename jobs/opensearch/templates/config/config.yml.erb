bootstrap.memory_lock: true

path.logs: "/var/vcap/sys/log/opensearch"
path.data: "/var/vcap/store/opensearch"
<% if p('opensearch.path_repo') != '' %>
path.repo: ["<%= p('opensearch.path_repo') %>"]
<% end %>

plugins.security.allow_default_init_securityindex: true
<% if_p('opensearch.admin.dn') do %>
# Defines the DNs (distinguished names) of certificates
# to which admin privileges should be assigned
plugins.security.authcz.admin_dn:
  - '<%= p("opensearch.admin.dn") %>'
<% end %>

<% if_p('opensearch.node.ssl.dn') do %>
plugins.security.nodes_dn:
<% p("opensearch.node.ssl.dn").each do | dn | %>
- '<%= dn %>'
<% end %>
<% end %>

<% if_p('opensearch.node.ssl.certificate') do %>
plugins.security.ssl.transport.enforce_hostname_verification: false
plugins.security.ssl.transport.pemkey_filepath: ssl/opensearch-node.key
plugins.security.ssl.transport.pemcert_filepath: ssl/opensearch-node.crt
plugins.security.ssl.transport.pemtrustedcas_filepath: ssl/opensearch.ca
<% end %>

<% if_p('opensearch.http.ssl.certificate') do %>
plugins.security.ssl.http.enabled: true
plugins.security.ssl.http.clientauth_mode: OPTIONAL
plugins.security.ssl.http.pemkey_filepath: ssl/opensearch-http.key
plugins.security.ssl.http.pemcert_filepath: ssl/opensearch-http.crt
plugins.security.ssl.http.pemtrustedcas_filepath: ssl/opensearch.ca
<% end %>

<%
  cluster_name = nil
  if_link("opensearch") { |opensearch_link| cluster_name = opensearch_link.p("opensearch.cluster_name") }
  unless cluster_name
    cluster_name = p("opensearch.cluster_name")
  end
  manager_hosts = nil
  if_link("opensearch") do |opensearch_link|
    manager_hosts = opensearch_link.instances.map {|e| "'#{e.address}'" }.join(',')
  end
  unless manager_hosts
    manager_hosts = p("opensearch.manager_hosts").join(',')
  end
%>
cluster.name: "<%= cluster_name %>"
<% unless p("opensearch.discovery.single_node") %>
cluster.initial_cluster_manager_nodes: [<%= manager_hosts %>]
<% end %>

# https://opensearch.org/docs/latest/tuning-your-cluster/index/#step-4-configure-discovery-hosts-for-a-cluster
discovery.seed_hosts: [<%= manager_hosts %>]
<% if p("opensearch.discovery.single_node") %>
discovery.type: "single-node"
<% end %>

<%
  node_roles = []
  if p("opensearch.node.allow_cluster_manager")
    node_roles.push("cluster_manager")
  end
  if p("opensearch.node.allow_data")
    node_roles.push("data")
  end
  if p("opensearch.node.allow_ingest")
    node_roles.push("ingest")
  end
  node_roles = node_roles.join(',')
%>
node.name: "<%= name %>/<%= index %>"
node.roles: [ <%= node_roles %> ]
<% p("opensearch.node.attributes", {}).each do | k, v | %>
node.attr.<%= k %>: "<%= v %>"
<% end %>

network.bind_host: "0.0.0.0"
network.publish_host: <%= spec.ip %>
http.host: <%= p("opensearch.http_host") %>

# see https://opensearch.org/docs/latest/tuning-your-cluster/availability-and-recovery/snapshots/snapshot-restore/#amazon-s3
<% if_p('opensearch.repository.s3.access_key', 'opensearch.repository.s3.secret_key') do %>
s3.client.default.protocol: <%= p('opensearch.repository.s3.protocol') %>
s3.client.default.read_timeout: <%= p('opensearch.repository.s3.read_timeout') %>
<% if_p('opensearch.repository.s3.region') do |region| %>
s3.client.default.region: <%= region %>
<% end %>
<% end %>

<% if_p('opensearch.config_options') do p("opensearch.config_options", {}).each do | k, v | %>
<%= k %>: <%= v %><% end %>
<% end %>
