#!/bin/bash

set -e
set -x

export JOB_NAME=opensearch_dashboards
export JOB_DIR=/var/vcap/jobs/$JOB_NAME

<% if !p("opensearch_dashboards.health.disable_post_start") %>

echo "Waiting <%= p("opensearch_dashboards.health.timeout") %>s for opensearch_dashboards to accept connections..."
elapsed=0
until [ $elapsed -ge <%= p("opensearch_dashboards.health.timeout") %> ]
do
  # We have to set and unset the 'e' flag around the curl as a return code of 000 (no network) will result in an error.
  # This return code is valid and therefore we want to ignore this as an error.
  set +e
  CODE=$(
    curl -sw '%{http_code}' \
      --cert ${JOB_DIR}/ssl/opensearch-dashboard.crt \
      --key ${JOB_DIR}/ssl/opensearch-dashboard.key \
      --cacert ${JOB_DIR}/ssl/opensearch.ca \
      http://<%= p("opensearch_dashboards.host") %>:<%= p("opensearch_dashboards.port") %>
  )
  set -e
  if [[ "$CODE" == "302" ]]; then
    echo Done!
    break
  fi
  echo -n .
  elapsed=$[$elapsed+<%= p("opensearch_dashboards.health.interval") %>]
  sleep <%= p("opensearch_dashboards.health.interval") %>
done

if [ "$elapsed" -ge "<%= p("opensearch_dashboards.health.timeout") %>" ]; then
  echo "ERROR: Cannot connect to opensearch_dashboards. Exiting..."
  exit 1
fi

<% end %>

exit 0
