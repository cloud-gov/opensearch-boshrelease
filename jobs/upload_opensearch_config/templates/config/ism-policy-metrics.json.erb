{
    "policy": {
        "description": "Rollover to a new index when age or size becomes our target",
        "default_state": "Rollover",
        "states": [
            {
                "name": "Rollover",
                "actions": [
                    {
                        "retry": {
                            "count": 3,
                            "backoff": "exponential",
                            "delay": "1m"
                        },
                        "rollover": {
                            "min_index_age": "<%= p('opensearch_config.rollover_index_age')%>",
                            "min_primary_shard_size": "<%= p('opensearch_config.rollover_document_size')%>" ,
                            "copy_alias": false
                        }
                    },
                    {
                        "retry": {
                            "count": 3,
                            "backoff": "exponential",
                            "delay": "1m"
                        },
                        "read_only": {}
                    }
                ],
                "transitions": [
                    {
                        "state_name": "Merged_index",
                        "conditions": {
                            "min_index_age": "30d"
                        }
                    }
                ]
            },
            {
                "name": "Merged_index",
                "actions": [
                    {
                        "retry": {
                            "count": 3,
                            "backoff": "exponential",
                            "delay": "1m"
                        },
                        "force_merge": {
                            "max_num_segments": 1
                        }
                    }
                ],
                "transitions": [
                    {
                        "state_name": "Delete_index",
                        "conditions": {
                            "min_index_age": "<%= p('opensearch_config.metric_delete_index_age')%>"
                        }
                    }
                ]
            },
            {
                "name": "Delete_index",
                "actions": [
                    {
                        "retry": {
                            "count": 3,
                            "backoff": "exponential",
                            "delay": "1m"
                        },
                        "delete": {}
                    }
                ],
                "transitions": []
            }
        ],
        "ism_template": [
            {
                "index_patterns": [
                    "logs-metrics-*"
                ],
                "priority": 100
            }
        ]
    }
}